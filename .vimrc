set rtp+=/usr/local/lib/python2.7/dist-packages/powerline/bindings/vim/
set rtp+=~/home/will/dev/fzf/bin/fzf
set laststatus=2
set showtabline=1
set t_Co=256
set path+=**
set number

set wildmenu
filetype plugin indent on
" ifzf installed using git
set rtp+=~/.fzf
"vimplugged
call plug#begin()
" Plug 'fatih/vim-go'
"Plug 'tpope/vim-repeat'
Plug '~/.fzf'
Plug 'junegunn/fzf.vim'
Plug 'nightsense/cosmic_latte'
Plug 'skywind3000/asyncrun.vim'
Plug 'skywind3000/vim-preview'
Plug 'skywind3000/gutentags'
Plug 'skywind3000/gutentags_plus'
call plug#end()

set background=dark
colorscheme cosmic_latte
execute pathogen#infect()
"quick pairs
imap <leader>' ''<ESC>i
imap <leader>" ""<ESC>i
imap <leader>( ()<ESC>i
imap <leader>[ []<ESC>i
"============== Custom Mappings ===============
"" general mapping
nmap <leader><Tab> :tabnext<CR>
nmap <leader><C-S-Tab> :tabprevious<CR>
map <C-S-Tab> :tabprevious<CR>
map <C-Tab> :tabnext<CR>
imap <C-S-Tab> <ESC>:tabprevious<CR>
imap <C-Tab> <ESC>:tabnext<CR>
noremap <F7> :set expandtab!<CR>
nnoremap th  :tabfirst<CR>
nnoremap tj  :tabnext<CR>
nnoremap tk  :tabprev<CR>
nnoremap tl  :tablast<CR>
nnoremap tt  :tabedit<Space>
nnoremap tn  :tabnext<CR>
nnoremap tm  :tabm<Space>
nnoremap td  :tabclose<CR>
nnoremap tc  :tabnew<Space>
" Mappings to access buffers (don't use "\p" because a
" delay before pressing "p" would accidentally paste).
" \l       : list buffers
" \b \f \g : go back/forward/last-used
" \1 \2 \3 : go to buffer 1/2/3 etc
nnoremap <Leader>l :ls<CR>
nnoremap <Leader>g :e#<CR>
nnoremap <Leader>1 :1b<CR>
nnoremap <Leader>2 :2b<CR>
nnoremap <Leader>3 :3b<CR>
nnoremap <Leader>4 :4b<CR>
nnoremap <Leader>5 :5b<CR>
nnoremap <Leader>6 :6b<CR>
nnoremap <Leader>7 :7b<CR>
nnoremap <Leader>8 :8b<CR>
nnoremap <Leader>9 :9b<CR>
nnoremap <Leader>0 :10b<CR>
"fzf stuff
nnoremap <leader>f :Files .<CR>
nnoremap <leader>b :Buffers<CR>
imap <c-x><c-l> <plug>(fzf-complete-line)

" Set buffer hidden (non recording)
nnoremap <Leader>h :set hidden<CR>
nnoremap <Leader>H :set confirm<CR>
" Mapping for asynchronos run current buffer.
nnoremap <F2> :FZF ~<CR>  
nnoremap <F3> :AsyncRun  
" It's useful to show the buffer number in the status line.
set laststatus=2 statusline=%02n:%<%f\ %h%m%r%=%-14.(%l,%c%V%)\ %P
set cul
"run into scratch buffer with :R cmd or use :read cmd to insert.
command! -nargs=* -complete=shellcmd R new | setlocal buftype=nofile bufhidden=hide noswapfile | r !<args>
set mouse=a
set paste
"run bash command
"map <F5> yyp!!sh<CR><Esc>
"Execute selection and display in new tab
vnoremap <F2> y:tabnew <Bar> r! <C-R>0<BACKSPACE><CR>
set splitright
vnoremap <F3> y:vsplit new <Bar> setlocal buftype=nofile bufhidden=hide noswapfile <Bar> r! <C-R>0<BACKSPACE><CR>
vnoremap <C-c> "*y
vnoremap <C-d> "*d
inoremap <C-v> <ESC>"*pa
"Following needed to get .bashrc loaded
set shellcmdflag=-ic
set lazyredraw

" check perl code with :make
"     by default it will call "perl -c" to verify the code and, if there are any errors, the cursor will be positioned in the offending line.
" errorformat uses scanf to extract info from errors/warnings generated by make.
"     %f = filename  %l = line number  %m = error message
" autowrite tells vim to save the file whenever the buffer is changed (for example during a save)
" BufWritePost executes the command after writing the buffer to file
" [F4] for quick :make
autocmd FileType perl set makeprg=/usr/bin/perl\ -c\ %\ $*
autocmd FileType perl set errorformat=%f:%l:%m
autocmd FileType perl set autowrite
autocmd BufWritePost *.pl,*.pm,*.t :make 
let g:asyncrun_open = 8
